<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeDashboardZoneVisibilityV1 />
    <DatagraphNodeSingleValueFieldV1 />
    <ISO8601DefaultCalendarPref />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <ParameterAction />
    <ParameterActionClearSelection />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='selected dot chart' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;not_null&quot;'>
        <calculation class='tableau' formula='&quot;not_null&quot;' />
        <members>
          <member value='&quot;not_null&quot;' />
          <member value='&quot;null&quot;' />
        </members>
      </column>
      <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°F&quot;'>
        <calculation class='tableau' formula='&quot;°F&quot;' />
        <members>
          <member value='&quot;°F&quot;' />
          <member value='&quot;°C&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='weather_data | Project : WeatherAPI' inline='true' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' version='18.1'>
      <repository-location id='weather_data' path='/t/weatherapi/datasources' revision='1.5' site='weatherapi' />
      <connection channel='https' class='sqlproxy' dbname='weather_data' directory='/dataserver' local-dataserver='' port='443' server='us-east-1.online.tableau.com' server-ds-friendly-name='weather_data | Project : WeatherAPI' username=''>
        <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='measure'>
            <remote-name>Number of Records</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>5</ordinal>
            <layered>true</layered>
            <caption>Number of Records</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
              <attribute datatype='string' name='formula'>&quot;1&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>temperature_2m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_2m]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>temperature_2m</remote-alias>
            <ordinal>1</ordinal>
            <layered>true</layered>
            <family>Weather_Dataset</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <object-id>[Weather_Dataset_E68AEEF7A68645B28A9605A269940197]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <layered>true</layered>
            <family>Weather_Dataset</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <object-id>[Weather_Dataset_E68AEEF7A68645B28A9605A269940197]</object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='boolean' name='CAP_CREATE_TEMP_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES'>false</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_CASE_INSENSITIVE_CONTAINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_IGNORE_HINT_CHECK_NOT_NULL'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SORT_BY'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERIES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORTS_LODJOINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_TOP_N'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_USE_QUERY_FUSION'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_LEFT'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_RIGHT'>true</attribute>
              <attribute datatype='integer' name='charset'>0</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='datasource'>&quot;<![CDATA[<?xml version='1.0' encoding='utf-8' ?>

<datasource :source-version='18.1' formatted-name='weather_data' inline='true' version='18.1' xml:base='https://us-east-1.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
  </document-format-change-manifest>
  <repository-location id='weather_data' path='/t/weatherapi/datasources' revision='1.5' site='weatherapi' />
  <connection :databaseVariables='' channel='https' class='sqlproxy' dbname='weather_data' local-dataserver='' port='443' server='us-east-1.online.tableau.com'>
    <relation name='sqlproxy' table='[sqlproxy]' type='table' />
    <cols>
      <map key='[Number of Records]' value='[sqlproxy].[Number of Records]' />
      <map key='[temperature_2m]' value='[sqlproxy].[temperature_2m]' />
      <map key='[time]' value='[sqlproxy].[time]' />
    </cols>
  </connection>
  <aliases enabled='yes' />
  <column aggregation='Sum' datatype='integer' default-type='quantitative' name='[Number of Records]' pivot='key' role='measure' type='quantitative' user-datatype='integer' user:auto-column='numrec' visual-totals='Default'>
    <calculation class='tableau' formula='1' />
  </column>
  <column aggregation='Count' caption='Weather_Dataset' datatype='table' default-type='quantitative' name='[__tableau_internal_object_id__].[Weather_Dataset_E68AEEF7A68645B28A9605A269940197]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
  <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
  <object-graph>
    <objects>
      <object caption='Weather_Dataset' id='Weather_Dataset_E68AEEF7A68645B28A9605A269940197'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
    </objects>
  </object-graph>
</datasource>
]]>&quot;</attribute>
              <attribute datatype='string' name='dialect-definition'>&quot;<![CDATA[<dialect-definition>
  <primary-dialect class='hyper' version='0.0.0'>
  </primary-dialect>
  <overlay-dialect-set>
    <overlay-dialect class='vizengine' version='0.1.0'>
    </overlay-dialect>
  </overlay-dialect-set>
</dialect-definition>
]]>&quot;</attribute>
              <attribute datatype='boolean' name='extract-active'>false</attribute>
              <attribute datatype='boolean' name='fast-get-server-time'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <overridable-settings>
        <date-options fiscal-year-start='january' start-of-week='sunday' />
        <default-date-format />
        <default-calendar-type>Gregorian</default-calendar-type>
      </overridable-settings>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:temperature_2m:qk]&quot;' value='Actual Temp' />
          <alias key='&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:temp_pred (copy)_1119988970922901505:qk:2]&quot;' value='Predicted Temp' />
        </aliases>
      </column>
      <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
      </column>
      <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
      </column>
      <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
        <aliases>
          <alias key='&quot;c&quot;' value='Freezing' />
          <alias key='&quot;cc&quot;' value='Very Cold' />
          <alias key='&quot;ccc&quot;' value='Chilly' />
          <alias key='&quot;h&quot;' value='Warm' />
          <alias key='&quot;hh&quot;' value='Very Warm' />
          <alias key='&quot;hhh&quot;' value='Hot' />
          <alias key='&quot;n&quot;' value='Neutral Cool' />
          <alias key='&quot;nn&quot;' value='Mild' />
          <alias key='&quot;no&quot;' value='No Data' />
        </aliases>
      </column>
      <column caption='DZV_Not_Null' datatype='boolean' name='[Calculation_1119988971016626193]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]=&apos;not_null&apos;' />
      </column>
      <column caption='selected color' datatype='boolean' name='[Calculation_1119988971020165139]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1119988971004014603]=&apos;no&apos;' />
      </column>
      <column caption='Check null/not null' datatype='string' name='[Calculation_926897137295949824]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1119988971001151498] THEN &apos;not_null&apos; ELSE &apos;null&apos;END' />
      </column>
      <column caption='Start End Date' datatype='date' datatype-customized='true' name='[Calculation_926897137305153538]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(MIN([time (Month / Day / Year)])) ))' />
      </column>
      <column caption='Predicted Date' datatype='date' datatype-customized='true' name='[Calculation_926897137306824707]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(IF [Calculation_926897137295949824] = &apos;null&apos; &#13;&#10;THEN [time (Month / Day / Year)]&#13;&#10;END) ))' />
      </column>
      <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;highlight&quot;' />
      </column>
      <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
      </column>
      <column caption='Actual Temp ' datatype='real' name='[Calculation_926897137335107620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temperature_2m]&#13;&#10;WHEN &apos;°C&apos; THEN ([temperature_2m]-32)/1.8&#13;&#10;END' />
      </column>
      <column caption='Predicted Temp' datatype='real' name='[Calculation_926897137335386149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temp_pred (copy)_1119988970922901505]&#13;&#10;WHEN &apos;°C&apos; THEN ([temp_pred (copy)_1119988970922901505]-32)/1.8&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='DZV_Null' datatype='boolean' name='[DZV_Not_Null (copy)_1119988971016970258]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]=&apos;null&apos;' />
      </column>
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[Number of Records]' pivot='key' role='measure' type='quantitative' user-datatype='integer' user:auto-column='numrec' visual-totals='Default'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Count' caption='Weather_Dataset' datatype='table' default-type='quantitative' layered='true' name='[__tableau_internal_object_id__].[Weather_Dataset_8E4D418ECBC3418381B04FEB79D1ED7C]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
      <column aggregation='Count' caption='Weather_Dataset' datatype='table' default-type='quantitative' layered='true' name='[__tableau_internal_object_id__].[Weather_Dataset_E68AEEF7A68645B28A9605A269940197]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
      <column caption='temp_pred' datatype='real' name='[temp_pred (copy)_1119988970922901505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;forcast_temperature_new_test&apos;,_arg1)[&apos;response&apos;]&#13;&#10;&quot;,MIN([time]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
      </column>
      <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
      <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1119988971004014603]' derivation='None' name='[none:Calculation_1119988971004014603:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_926897137335107620]' derivation='Sum' name='[sum:Calculation_926897137335107620:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_2m]' derivation='Sum' name='[sum:temperature_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_926897137335386149]' derivation='User' name='[usr:Calculation_926897137335386149:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[temp_pred (copy)_1119988970922901505]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[temp_pred (copy)_1119988970922901505]' derivation='User' name='[usr:temp_pred (copy)_1119988970922901505:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DZV_Not_Null)' hidden='true' name='[Action (DZV_Not_Null)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971016626193]' />
        </groupfilter>
      </group>
      <group caption='Action (DZV_Null)' hidden='true' name='[Action (DZV_Null)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DZV_Not_Null (copy)_1119988971016970258]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (color,DAY(time),WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
          <groupfilter function='level-members' level='[dy:time:ok]' />
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
          <groupfilter function='level-members' level='[Calculation_926897137331421217]' />
          <groupfilter function='level-members' level='[Calculation_926897137332920355]' />
          <groupfilter function='level-members' level='[time (Month / Day / Year)]' />
          <groupfilter function='level-members' level='[dy:time:ok]' />
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (color,selected color,DAY(time),WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (color,selected color,DAY(time),WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
          <groupfilter function='level-members' level='[Calculation_1119988971020165139]' />
          <groupfilter function='level-members' level='[dy:time:ok]' />
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='time (Month / Year) Set' name='[time (Month / Year) Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[time (Month / Year)]' member='202201' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202202' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202203' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202204' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202205' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202206' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202207' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202208' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202209' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202210' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202211' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202212' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202301' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202302' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202303' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202304' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202305' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202306' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202307' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202308' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202309' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202310' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202311' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202312' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202401' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202402' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202403' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202404' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202405' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202406' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202407' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202408' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202409' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202410' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202411' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202412' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202501' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202502' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202503' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202504' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202505' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202506' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1119988971004014603:nk]' type='palette'>
            <map to='#1780a1'>
              <bucket>&quot;cc&quot;</bucket>
            </map>
            <map to='#455e89'>
              <bucket>&quot;c&quot;</bucket>
            </map>
            <map to='#5c4d7d'>
              <bucket>&quot;h&quot;</bucket>
            </map>
            <map to='#73d2de'>
              <bucket>&quot;ccc&quot;</bucket>
            </map>
            <map to='#892b64'>
              <bucket>&quot;hh&quot;</bucket>
            </map>
            <map to='#b7094c'>
              <bucket>&quot;hhh&quot;</bucket>
            </map>
            <map to='#dae3e8'>
              <bucket>&quot;no&quot;</bucket>
            </map>
            <map to='#efefd0'>
              <bucket>&quot;n&quot;</bucket>
            </map>
            <map to='#f7c59f'>
              <bucket>&quot;nn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#25a18e'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:temperature_2m:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]&quot;</bucket>
            </map>
            <map to='#99c1b9'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]&quot;</bucket>
            </map>
            <map to='#d88c9a'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]&quot;</bucket>
            </map>
            <map to='#f79256'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:temp_pred (copy)_1119988970922901505:qk:2]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='selected dot chart' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;not_null&quot;'>
          <calculation class='tableau' formula='&quot;not_null&quot;' />
        </column>
        <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°F&quot;'>
          <calculation class='tableau' formula='&quot;°F&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Weather_Dataset' id='Weather_Dataset_E68AEEF7A68645B28A9605A269940197'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter Dot Plot' name='[Action2_3943668F9B224BCCBABF43B5A164CCC2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Temp Forecast' type='sheet' worksheet='Calendar' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Calendar' />
        <param name='special-fields' value='all' />
        <param name='target' value='Temp Forecast' />
      </command>
    </action>
    <action caption='Remove Highlight Calendar' name='[Action3_2C2DA69B475343BF81BC40C56C283EA8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Temp Forecast' type='sheet' worksheet='Calendar' />
      <command command='tsc:brush'>
        <param name='exclude' value='incl_null,not_null,color legend' />
        <param name='field-captions' value='highlight' />
        <param name='target' value='Temp Forecast' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action4_7266CC00001D44ADB59B0F81451AAF21]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Calendar' />
      <command command='tsc:brush'>
        <param name='field-captions' value='highlight' />
        <param name='target' value='Calendar' />
      </command>
    </action>
    <edit-parameter-action caption='Update Parameter' name='[Action3_C5ED937B27504C45A058E856BF28E77D]'>
      <activation type='on-select' />
      <source dashboard='Temp Forecast' type='sheet' worksheet='Calendar' />
      <agg-type type='attr' />
      <clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Calendar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>AVG Temperature Daily in &lt;</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year)]</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data | Project : WeatherAPI' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°F&quot;'>
              <calculation class='tableau' formula='&quot;°F&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='Check null/not null' datatype='string' name='[Calculation_926897137295949824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498] THEN &apos;not_null&apos; ELSE &apos;null&apos;END' />
            </column>
            <column caption='0.5' datatype='real' name='[Calculation_926897137296936961]' role='measure' type='quantitative' user:unnamed='Calendar'>
              <calculation class='tableau' formula='0.5' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column-instance column='[Calculation_926897137295949824]' derivation='Attribute' name='[attr:Calculation_926897137295949824:nk]' pivot='key' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1119988971004014603]' derivation='None' name='[none:Calculation_1119988971004014603:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_926897137331421217]' derivation='None' name='[none:Calculation_926897137331421217:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_926897137332920355]' derivation='None' name='[none:Calculation_926897137332920355:nk]' pivot='key' type='nominal' />
            <column-instance column='[time (Month / Day / Year)]' derivation='None' name='[none:time (Month / Day / Year):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1119988970994573315]' derivation='Sum' name='[sum:Calculation_1119988970994573315:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137296936961]' derivation='Sum' name='[sum:Calculation_926897137296936961:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ccc&quot;</bucket>
              <bucket>&quot;cc&quot;</bucket>
              <bucket>&quot;c&quot;</bucket>
              <bucket>&quot;n&quot;</bucket>
              <bucket>&quot;no&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' context='true' filter-group='3'>
            <groupfilter function='member' level='[time (Month / Year)]' member='202506' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='17' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]' value='false' />
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='ieee' />
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='#000000' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137296936961:qk]' />
              <text column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]' />
              <text column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]' />
              <text column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137331421217:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]' />
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[Date: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Temperature: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='2' fontsize='4'>Æ        </run>
                <run fontalignment='2'><![CDATA[
<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]>
 ]]></run>
                <run>Æ&#10;  </run>
                <run fontsize='8'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]><[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</rows>
        <cols>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{E478E5BF-6860-49C3-96C2-D84848B9C23F}' />
    </worksheet>
    <worksheet name='color legend'>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data | Project : WeatherAPI' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°F&quot;'>
              <calculation class='tableau' formula='&quot;°F&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='MAX(15)' datatype='integer' name='[Calculation_926897137322684447]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='MAX(15)' />
            </column>
            <column caption='MIN(0.2)' datatype='real' name='[Calculation_926897137326551072]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='MIN(0.2)' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1119988971004014603]' derivation='None' name='[none:Calculation_1119988971004014603:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[Calculation_926897137322684447]' derivation='User' name='[usr:Calculation_926897137322684447:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137326551072]' derivation='User' name='[usr:Calculation_926897137326551072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_1119988971004014603]' member='&quot;hh&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Calculation_926897137331421217]' member='&quot;highlight&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Calculation_926897137332920355]' member='&quot;°F&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[dy:time:ok]' member='18' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[time (Month / Day / Year)]' member='20250618' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[wd:time:ok]' member='4' />
                          <groupfilter function='member' level='[wk:time:ok]' member='25' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Calculation_1119988971004014603]' />
                <hierarchy name='[Calculation_926897137331421217]' />
                <hierarchy name='[Calculation_926897137332920355]' />
                <hierarchy name='[time (Month / Day / Year)]' />
                <hierarchy name='[dy:time:ok]' />
                <hierarchy name='[wk:time:ok]' />
                <hierarchy name='[wd:time:ok]' />
              </order>
            </groupfilter>
          </filter>
          <manual-sort column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;hhh&quot;</bucket>
              <bucket>&quot;hh&quot;</bucket>
              <bucket>&quot;h&quot;</bucket>
              <bucket>&quot;nn&quot;</bucket>
              <bucket>&quot;n&quot;</bucket>
              <bucket>&quot;ccc&quot;</bucket>
              <bucket>&quot;cc&quot;</bucket>
              <bucket>&quot;c&quot;</bucket>
              <bucket>&quot;no&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137326551072:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' value='#333333' />
            <format attr='font-size' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' value='6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' />
              <size column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137322684447:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk] * [sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137326551072:qk])</cols>
      </table>
      <simple-id uuid='{3F72D39F-8955-4391-8205-B1A2A6902F4C}' />
    </worksheet>
    <worksheet name='incl_null'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#25a18e' fontsize='12'>Actual Temperature</run>
            <run bold='true' fontsize='12'> vs</run>
            <run bold='true' fontcolor='#d88c9a' fontsize='12'> Predicted Temperature</run>
            <run bold='true' fontsize='12'> Hourly</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='9'><![CDATA[Date: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data | Project : WeatherAPI' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°F&quot;'>
              <calculation class='tableau' formula='&quot;°F&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='Start End Date' datatype='date' datatype-customized='true' name='[Calculation_926897137305153538]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(MIN([time (Month / Day / Year)])) ))' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='Actual Temp ' datatype='real' name='[Calculation_926897137335107620]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temperature_2m]&#13;&#10;WHEN &apos;°C&apos; THEN ([temperature_2m]-32)/1.8&#13;&#10;END' />
            </column>
            <column caption='Predicted Temp' datatype='real' name='[Calculation_926897137335386149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temp_pred (copy)_1119988970922901505]&#13;&#10;WHEN &apos;°C&apos; THEN ([temp_pred (copy)_1119988970922901505]-32)/1.8&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_926897137332920355]' derivation='None' name='[none:Calculation_926897137332920355:nk]' pivot='key' type='nominal' />
            <column-instance column='[time]' derivation='None' name='[none:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_926897137335107620]' derivation='Sum' name='[sum:Calculation_926897137335107620:qk]' pivot='key' type='quantitative' />
            <column caption='temp_pred' datatype='real' name='[temp_pred (copy)_1119988970922901505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;forcast_temperature_new_test&apos;,_arg1)[&apos;response&apos;]&#13;&#10;&quot;,MIN([time]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[Calculation_926897137305153538]' derivation='User' name='[usr:Calculation_926897137305153538:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137335386149]' derivation='User' name='[usr:Calculation_926897137335386149:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[temp_pred (copy)_1119988970922901505]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_1119988971004014603]' member='&quot;hh&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Calculation_926897137331421217]' member='&quot;highlight&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Calculation_926897137332920355]' member='&quot;°F&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[dy:time:ok]' member='18' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[time (Month / Day / Year)]' member='20250618' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[wd:time:ok]' member='4' />
                          <groupfilter function='member' level='[wk:time:ok]' member='25' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Calculation_1119988971004014603]' />
                <hierarchy name='[Calculation_926897137331421217]' />
                <hierarchy name='[Calculation_926897137332920355]' />
                <hierarchy name='[time (Month / Day / Year)]' />
                <hierarchy name='[dy:time:ok]' />
                <hierarchy name='[wk:time:ok]' />
                <hierarchy name='[wd:time:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' context='true' filter-group='3'>
            <groupfilter function='member' level='[time (Month / Year)]' member='202506' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='24' />
            <encoding attr='space' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' scope='rows' value='°F' />
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' value='60' />
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' value='60' />
            <encoding attr='space' class='0' domain-expand='false' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='212' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='*hh' />
            <format attr='font-size' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='8' />
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' value='Predicted Temp'>
              <formatted-text>
                <run>Predicted Temp</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]>]]></run>
                <run>&#10;At:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]>:00]]></run>
                <run>&#10;Actual Temp :&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]><[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]>]]></run>
                <run>&#10;At:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]>:00]]></run>
                <run>&#10;Predicted Temp:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]><[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk] + [sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk])</rows>
        <cols>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</cols>
      </table>
      <simple-id uuid='{71AC7011-D172-4849-95AD-E9FBD6F719D0}' />
    </worksheet>
    <worksheet name='not_null'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#d88c9a' fontsize='12'>Predicted Temperature</run>
            <run bold='true' fontcolor='#f79256' fontsize='12'>Æ </run>
            <run bold='true' fontcolor='#000000' fontsize='12'>Hourly</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='9'><![CDATA[Date: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137306824707:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data | Project : WeatherAPI' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°F&quot;'>
              <calculation class='tableau' formula='&quot;°F&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='Check null/not null' datatype='string' name='[Calculation_926897137295949824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498] THEN &apos;not_null&apos; ELSE &apos;null&apos;END' />
            </column>
            <column caption='Predicted Date' datatype='date' datatype-customized='true' name='[Calculation_926897137306824707]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(IF [Calculation_926897137295949824] = &apos;null&apos; &#13;&#10;THEN [time (Month / Day / Year)]&#13;&#10;END) ))' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='Predicted Temp' datatype='real' name='[Calculation_926897137335386149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temp_pred (copy)_1119988970922901505]&#13;&#10;WHEN &apos;°C&apos; THEN ([temp_pred (copy)_1119988970922901505]-32)/1.8&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_926897137295949824]' derivation='None' name='[none:Calculation_926897137295949824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_926897137306824707]' derivation='None' name='[none:Calculation_926897137306824707:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137332920355]' derivation='None' name='[none:Calculation_926897137332920355:nk]' pivot='key' type='nominal' />
            <column-instance column='[time (Month / Day / Year)]' derivation='None' name='[none:time (Month / Day / Year):ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='None' name='[none:time:qk]' pivot='key' type='quantitative' />
            <column caption='temp_pred' datatype='real' name='[temp_pred (copy)_1119988970922901505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;forcast_temperature_new_test&apos;,_arg1)[&apos;response&apos;]&#13;&#10;&quot;,MIN([time]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[Calculation_926897137335386149]' derivation='User' name='[usr:Calculation_926897137335386149:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[temp_pred (copy)_1119988970922901505]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_1119988971004014603]' member='&quot;hh&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Calculation_926897137331421217]' member='&quot;highlight&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Calculation_926897137332920355]' member='&quot;°F&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[dy:time:ok]' member='18' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[time (Month / Day / Year)]' member='20250618' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[wd:time:ok]' member='4' />
                          <groupfilter function='member' level='[wk:time:ok]' member='25' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Calculation_1119988971004014603]' />
                <hierarchy name='[Calculation_926897137331421217]' />
                <hierarchy name='[Calculation_926897137332920355]' />
                <hierarchy name='[time (Month / Day / Year)]' />
                <hierarchy name='[dy:time:ok]' />
                <hierarchy name='[wk:time:ok]' />
                <hierarchy name='[wd:time:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' context='true' filter-group='3'>
            <groupfilter function='member' level='[time (Month / Year)]' member='202506' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' scope='rows' value='°F' />
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' value='48' />
            <encoding attr='space' class='0' domain-expand='false' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137295949824:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137306824707:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[hr:time:ok]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]>]]></run>
                <run>&#10;At:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[hr:time:ok]>:00]]></run>
                <run>&#10;Predicted Temp:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]><[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#d88c9a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]</rows>
        <cols>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:qk]</cols>
      </table>
      <simple-id uuid='{10CD47F8-ECEC-4D11-9237-BAEDA4FB3353}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Temp Forecast'>
      <style />
      <size maxheight='1000' maxwidth='600' minheight='1000' minwidth='600' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='weather_data | Project : WeatherAPI' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°F&quot;'>
          <calculation class='tableau' formula='&quot;°F&quot;' />
          <members>
            <member value='&quot;°F&quot;' />
            <member value='&quot;°C&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
      <zones>
        <zone h='100000' id='1' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='54' forceUpdate='true' h='6200' id='2' is-fixed='true' type-v2='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000' fontsize='18'>Temperature Forecast in New York</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='2' h='1000' id='15' is-fixed='true' type-v2='empty' w='100000' x='0' y='6200'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-right' value='80' />
              <format attr='margin-left' value='80' />
              <format attr='padding-right' value='80' />
              <format attr='padding-left' value='80' />
              <format attr='background-color' value='#000000' />
            </zone-style>
          </zone>
          <zone fixed-size='66' h='6600' id='14' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='7200'>
            <zone fixed-size='233' forceUpdate='true' h='5600' id='13' is-fixed='true' type-v2='text' w='40166' x='1667' y='7800'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='12'>AVG Daily Temperature</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' italic='true'>Click on a day to filter data</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='55' h='5600' id='18' is-fixed='true' mode='compact' param='[Parameters].[Parameter 2]' show-title='false' type-v2='paramctrl' w='10500' x='41833' y='7800'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='8' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='5600' id='19' type-v2='text' w='4667' x='52333' y='7800'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='12'>in</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='padding-bottom' value='12' />
              </zone-style>
            </zone>
            <zone fixed-size='267' h='5600' id='12' is-fixed='true' mode='dropdown' name='Calendar' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' show-title='false' type-v2='filter' values='database' w='41333' x='57000' y='7800'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='8' />
                <format attr='margin-right' value='4' />
                <format attr='padding-right' value='100' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='padding' value='10' />
              <format attr='padding-top' value='6' />
              <format attr='padding-bottom' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='503' h='50300' id='3' is-fixed='true' name='Calendar' show-title='false' w='100000' x='0' y='13800'>
            <layout-cache type-h='cell' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='padding' value='10' />
              <format attr='padding-top' value='0' />
              <format attr='padding-bottom' value='0' />
            </zone-style>
          </zone>
          <zone fixed-size='37' h='4500' id='17' is-fixed='true' name='color legend' show-title='false' w='100000' x='0' y='64100'>
            <layout-cache minwidth='901' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='padding' value='4' />
              <format attr='padding-right' value='10' />
              <format attr='padding-left' value='10' />
            </zone-style>
          </zone>
          <zone h='31400' id='4' param='horz' type-v2='layout-flow' w='100000' x='0' y='68600'>
            <zone fixed-size='201' h='28000' hidden-by-user='true' id='5' is-fixed='true' name='not_null' w='100000' x='0' y='68600'>
              <layout-cache minheight='184' minwidth='159' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
            <zone h='31400' id='6' name='incl_null' w='100000' x='0' y='68600'>
              <layout-cache cell-count-w='21' minheight='179' non-cell-size-w='61' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
        </zone>
      </zones>
      <simple-id uuid='{67A92629-12FF-4BB1-87AB-6E5EDB24D8D0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='incl_null'>
      <cards>
        <edge name='left'>
          <strip size='254'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='dropdown' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' type='setMembership' />
            <card pane-specification-id='1' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971020165139:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:day:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:hour:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:year:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3A145688-FEF4-4E8B-A332-CAD90E162557}' />
    </window>
    <window class='worksheet' name='Calendar'>
      <cards>
        <edge name='left'>
          <strip size='296'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='dropdown' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' type='filter' />
            <card pane-specification-id='0' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971001151498:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971016626193:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971020165139:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137295949824:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47C0C279-D00E-4308-977B-3BDD7AFAB0ED}' />
    </window>
    <window class='worksheet' name='not_null'>
      <cards>
        <edge name='left'>
          <strip size='325'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[hr:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971016626193:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971020165139:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137295949824:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08E787AE-9F14-4803-92A2-32A69AD97803}' />
    </window>
    <window class='dashboard' maximized='true' name='Temp Forecast'>
      <viewpoints>
        <viewpoint name='Calendar'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</field>
                    </x-fields>
                    <y-fields>
                      <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137331421217:nk]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137296936961:qk]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</field>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>18</value>
                  <value>&quot;hh&quot;</value>
                  <value>&quot;highlight&quot;</value>
                  <value>&quot;°F&quot;</value>
                  <value>20250618</value>
                  <value>70.985714285714295</value>
                  <value>10.5</value>
                  <value>4</value>
                  <value>25</value>
                  <value>&quot;not_null&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='color legend'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='incl_null'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='not_null'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CA97FC8C-6876-43A0-8838-D881EA693274}' />
    </window>
    <window class='worksheet' name='color legend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B517155-9040-447F-B273-55A3C58D153D}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='e4eda526-65e2-4b05-8ffc-df16756a5477' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='741a7173-bc48-4668-8d95-c14d7c9efdc1' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='5cdb1027-b09b-4877-ad1e-2c11b4fb782a' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='d42ecc5b-97d2-461f-ac26-4288c5fe70bf' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='f1784374-54e6-4944-a4f5-2690a8341fb5' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='706ea245-4f84-4783-a3de-815329926088' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='8b241653-3d6b-438e-b9e8-da35b9c7518d' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='f6021540-345b-485d-ba6c-808b0144a500' />
      </node-execution-subgraphs>
      <nodes>
        <dashboard-zone-visibility-node dashboard-identifier='{67A92629-12FF-4BB1-87AB-6E5EDB24D8D0}' node-guid='f6021540-345b-485d-ba6c-808b0144a500' visibility-input-guid='0b5ef051-dc20-49ac-942c-b255566a3a6b' zone-id='6' />
        <single-value-field-node fieldname='[Parameters].[Parameter 2]' fieldname-input-guid='9d19bad6-fc35-4d80-85c2-1d117d87f5c6' node-guid='8b241653-3d6b-438e-b9e8-da35b9c7518d' value-output-guid='fbbc2168-5fab-426a-a525-78e1494405a9' />
        <dashboard-zone-visibility-node dashboard-identifier='{67A92629-12FF-4BB1-87AB-6E5EDB24D8D0}' node-guid='706ea245-4f84-4783-a3de-815329926088' visibility-input-guid='80b7ae76-1144-443f-8518-ca18ed4c2c67' zone-id='5' />
        <single-value-field-node fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Calculation_1119988971016626193]' fieldname-input-guid='f7417dbb-2044-4e46-80dc-e38cd074f896' node-guid='f1784374-54e6-4944-a4f5-2690a8341fb5' value-output-guid='ef2bec6a-fd4a-4d2d-88fe-1924c71e9987' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' node-guid='d42ecc5b-97d2-461f-ac26-4288c5fe70bf' orientation='vertical' sheet-identifier='{71AC7011-D172-4849-95AD-E9FBD6F719D0}' title-input-guid='8a24cb2d-44a7-41b2-9f6e-41a102da0fa5' />
        <single-value-field-node fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[DZV_Not_Null (copy)_1119988971016970258]' fieldname-input-guid='31c65d86-3cac-4f29-88aa-f0dedfdaf00a' node-guid='5cdb1027-b09b-4877-ad1e-2c11b4fb782a' value-output-guid='ea44e585-aa5d-4b86-94ca-264dc72384cf' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' node-guid='741a7173-bc48-4668-8d95-c14d7c9efdc1' orientation='vertical' sheet-identifier='{10CD47F8-ECEC-4D11-9237-BAEDA4FB3353}' title-input-guid='b83bd394-398b-4fd5-8ca1-4aab43414474' />
      </nodes>
      <edges>
        <edge from='ea44e585-aa5d-4b86-94ca-264dc72384cf' to='80b7ae76-1144-443f-8518-ca18ed4c2c67' />
        <edge from='ef2bec6a-fd4a-4d2d-88fe-1924c71e9987' to='0b5ef051-dc20-49ac-942c-b255566a3a6b' />
        <edge from='fbbc2168-5fab-426a-a525-78e1494405a9' to='8a24cb2d-44a7-41b2-9f6e-41a102da0fa5' />
        <edge from='fbbc2168-5fab-426a-a525-78e1494405a9' to='b83bd394-398b-4fd5-8ca1-4aab43414474' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='384' name='Calendar' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3wc9Z3/8dds31Vb9V4syaoucpd7xWDAdEMSCDGEcITkEkK4IyGXUAKX
      kPqDI1wILTmaA6YbU2xjg3uRi2xLtixZXbJ6l7bP7w8ZBWMZbEveldjP8/HII3hmd+fz9cx+
      3zPfGe9XUVVVRQghhF9RFEXR+LoIIYQQviEBIIQQfkoCQAgh/JQEgBBC+CkJACGE8FMSAEII
      4ackAIQQwk9JAAghhJ+SABBCCD8lASCEEH5K560NdXV1sXr1aqqqqpg8eTLLli1Dp/Pa5i+I
      Tz/9lMLCQm699VYsFgt2u51nn32WrKwsFi1a5OvyzpvL5WLVqlW0trYOLBs/fjwLFy70YVVD
      43A4WLVqFStWrMBkMvH2228TExNDfn4+x44do7KykiVLlnzpZ9xyyy08/vjjBAUFeanqs9fX
      18fTTz99yrJ58+bx1FNP8cgjjxAWFuajyoaH2+1m1apVtLS0AJCVlcXSpUtPec2GDRtoaWnh
      +uuv90WJ58zj8bBjxw42bNhAaGgo1157LbGxsae9zul00tLSQnR0NIqiDGsNXrsC+PnPf86G
      DRuIiYlh9erVNDc3f+nrPR4PHo/HS9WdnzfffJNf//rXfPrppwDs3LmThx9+mFWrVg28xuFw
      8MWfW1JVFbfb7dVaz5XL5eLEiRM8+uijOJ3OL63X7XbjdDq9WN25UxSF5557jv379+N0OvnF
      L37B448/DsCrr75KQUEB0L9vHA7HKe9VVRVVVdm5cycul8vrtZ8tl8vF3r17eeGFF3C5XLjd
      bvbu3fuV+280cLvd/Pa3v6Wtre2M/UJUVBRJSUleruz8FRYWcscdd2C1WmloaGDNmjUD6zwe
      z0C/cfz4cW666aYL0h96LQDKysqYO3cu3/72t3n++eeJjo7mySef5MUXXwTgxz/+MQUFBTz9
      9NNcfvnlzJo1i6lTp1JbW+utEs/LFVdcwZo1a1BVlbVr13LllVcC/Qfs/fffz4wZM5g1axY7
      duxg//79LFy4kEsuuYSsrCw++ugjH1c/OJ1Ox8qVK/nud79LVFQUd999N0uWLOGnP/0p27dv
      R1VVVqxYQX19PZs2bWLevHnMnj2bl1566bSwGyn0ej35+fls376d+vp6UlNTOXHiBA6Hg127
      djFz5kwqKipYtmwZ8+fP595778XpdLJ27Vry8/NZtGjRacEwkpjNZu6++26WL19Obm4ud999
      N+PGjQPgzjvvZPz48fzgBz+gp6eH5cuX093dTVdXF1deeSU2m83H1Z8djUbDbbfdxl133cXS
      pUspLS3lxhtv5Kc//Sl33XUXxcXFbN++3ddlnrXa2lrCwsK4+uqreeihh7j11lvp6+tj5cqV
      5OfnM336dPbt28c999zD3r17Wbp06bC3z2sBcN999/HUU08xb948nnvuOQBaWlpob28HoK6u
      jr6+Ptrb28nIyODdd98lNjaWI0eOeKvE8zJ79mwKCwtpaWmhsLCQ/Px8AIqLi/noo49Yv349
      9957Lw8//PDAF+25557jlltuYfPmzb4s/ZzV19fT19cHQFVVFX19fTz44IP85je/4bXXXuP3
      v/893d3dPq7yzPLz89m9ezc7d+5k/vz5xMXFUVZWRlVVFenp6fz1r39lwYIFrF+/ng0bNlBc
      XMz999/P7373O9566y30er2vm3BefvKTn7B27Vo2btxIT08PVVVVA1fY1dXVIza0v8jj8fD7
      3/+eX/7yl3zwwQc4HA7eeustjEYj99xzD52dnQNDRKPB/PnzSU9PZ968edx66600Nzej1+v5
      xS9+wapVq5gyZQpr1qzhgQceYPz48bz66qtMnTp1WGvw2iD83LlzKSgoYOvWrdx+++3k5eWd
      8bWJiYlERkZitVpH/MFpsVhITk5m3bp1REdHExAQAMCJEydIS0sjPDycvLy8gSGv0NBQ4uPj
      iYqKoqKiwoeVD53D4aCuro4///nPGI1G4uLiRvRZ8vTp03nwwQfZsGEDN998M263m9dff53Q
      0FCio6OpqKigtraW/fv3ExQURHt7O3a7ncmTJxMUFDTs46/eMnbsWMLCwk4ZVhiNFEUhPT2d
      0NBQoqKiAJgyZQoPPfTQqLyfGBgYyDPPPENjYyO//vWvue+++3j00Ue54447iI2Npbm5mbCw
      MAIDA9Hr9VitVrRa7bDW4LW/tUceeYQFCxag1+uxWCxoNBp0Oh3Hjh1j3759VFdXe6uUYbds
      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
      pLO+mP2Lm1BV9VdvgnHUN1DtqGu1EK0tJtyK6RT/iUXl1Xh//b+g3bFagrCHNv9GrnbUtcrd
      Mm0lMSqs2TtKPF4vxRU1fkjkG9bgIOwhzY9ZVW0dTpeMWXsSYQ0mOMjc7HOHq2tpaHK3cSLf
      MOh1xEXYURRF+W2dugkhhDhtUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFR
      UgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFR
      UgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFR
      UgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRUgBCCKFRhtP5R2aj
      AXuIpbWztBq97tQ9Zw+x4FXVNkzjGybjqYfOYjL+4j4HKp2iBPT34S+NWbDZiEEvY9aeGA2n
      Hq9Qi5kgk7EN0/iOTqec+LOiqgF49BNCCHFWFEVRfnunHEIIIU7L/wO93GIcIAJBYgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Temp Forecast' width='384'>
      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
    </thumbnail>
    <thumbnail height='88' name='color legend' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABYCAYAAAD83SBJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABYUlEQVR4nO3XMRGEABAEwecL/xpQgyayI0LDBdOtYLOpPWZmfgDk/LcHALBDAACiBAAg
      SgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIE
      ACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAA
      ogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBK
      AACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACDq3B7wee5rewJAigcA
      ECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABR
      AgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAEPUC1mwHDPuFJd4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='incl_null' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='not_null' width='384'>
      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
      NeO9tIWyPGZj3Zyp2Vge0txYJjP9HJZlzYnPMd9+I3M6AOYCy7LmxMZ3NsyFjdZsYHnMLQvl
      N7JQhqN9ks8wp44BAAAqZ/7HNgDgqRAAAGAoAkBSKpXSpUuXHpp+7do19ff3lx/39/drcHCw
      /PjevXs6f/58RWp8XOl0WseOHZt2Sq3jOPrss8/Kpy5ms1mdOnVKpVKp/JwzZ85oYmKi4vV+
      VT6f17Fjx9Td3a3u7m5duXKl/P9c19WRI0c0OTkpaerMj6NHjyqfz5efc/nyZQ0PD1e87i8r
      Fos6ffp0+XGpVNLRo0d18OBBFYvF8nTP83TixIny9/7gcSaTKT+nv79ft27dqlzx3yCbzerC
      hQvT1qurV6+qu7tbZ86cUTablTS1HiUSifJzrl+/ruvXr1e83m/ieZ56enp09+7d8rRz586p
      u7tbPT09KhaLKhQKOnnyZPmaJM/z1Nvbq9HR0aDKnqa/v7/8+zhy5Ej5u+/r61N3d7fOnj2r
      bDYrz/N05swZJZPJ8muvX7+uGzdulB8bHwBffPGF9u3bp5MnT06b7nmeTp48qZMnT5Y3nGfP
      ntXBgwfLzzl+/LiOHTtW0XofxfM8ffLJJzp37ty06QMDA+U/SUokEvroo480NDT0tY+DFA6H
      tXr1anV0dCgajU5bWe/du6fe3t5y6Lquq88++0wXL16UJOVyOf3xj3/U1atXgyhdkjQxMaH/
      /M//VHd3d3na4cOHFYvF1NbWpo8//rg8PZ1Oq6enR6dOnZI0tfwOHTqks2fPSpoKjv3793/t
      zkklDQ0N6be//a1OnDgxbfr58+e1cuVKVVdX691335Xrujp27JiOHz8uaWr5HDhwYE7tJN26
      dUvd3d26efNmedqFCxe0du1aFYtF7du3T7lcTp9//nl558NxHH388cfq6+sLquxp2tra1NHR
      oY6ODp07d658AP7ChQtauXKlqqqq9N5778l1XR09erS83FzX1f79+6ctD+MDYM2aNfrZz36m
      6urqadMTiYTq6urU2tqqsbExSVNnbdTW1iqVSqlQKCiXy6mxsTGIsr9WX1+fFi1apKampmnT
      L126pL/7u79TT09PedqmTZvU29sraSrYvv/971e01m8SCoXU3t6u9vZ2DQwMaMeOHeX/19vb
      q127dmlwcLAcyp2dnbp27Zqkqb2bdevWBXomR319vX7xi1+ovb1d0tRGfWRkRN/97ne1YcMG
      TU5OynEcSVOfZ8eOHRobGyt/nlWrVmlwcFCe5+n27dtasWJF4GemtLe36+c//7kaGhqmTQ+F
      Qmpra9P69esVj8flOI5aWlqUSCTkuq7u3Lmjtra2WTlVdTYUi0V1d3frpZdemjY9Go1q8eLF
      2rx5c7k1+cwzz2hgYECe5+nKlSvauHFjECV/rYaGBi1ZskT5fF6dnZ2KxWKSppbH4sWLtX79
      ekWjUbmuq0WLFml8fFyu62pkZETt7e3Tzj4zPgC+6fS13t7ecso+2MOUpC1btujcuXO6deuW
      Vq1aVakyv1U+n9fp06f1wgsvSPrLhTHFYlH5fF6xWEyZTKbc7dPU1KRMJqNCoaC7d+9q8eLF
      gdX+dYaHh9XQ0FAOZtd1NTQ0pEWLFikajZa7GWzbVk1NjVKplL744gs988wzQZb90KmED67I
      fLCehUKh8oU6X3zxhZYtW6aGhgaNjIyUX9PY2KiJiQn19vbOiQ3PN50emc/ndejQIe3bt0/1
      9fUKh8OyLEvLly/X4ODgnNpwep6nw4cPa9u2bYpEIuULPKWpVtuBAwf0wQcfaM2aNZKmQiEa
      jSqTyejq1avq6uoKsvyHPPg8X95BymazOnjwoPbu3avGxsbyxZJLly7V0NDQ1y6PuRHNc4zn
      eerv71dLS4skaXR0tLyHtmTJEh07dkypVEo7d+4sd6sE7cHeyr59+3Tt2jV1d3drx44dGhgY
      UD6f12effaZisaiBgYFyq2XlypU6d+6cFi1aFPhe5pd5nqcjR47or//6r8t13bt3TxMTE9q/
      f7+y2ax6e3vLYbdp0yadOnVKlmWpqqoqyNIfYtu2PM9TsVhUKBQq/zeTyWhsbEwHDhxQOp1W
      b29vudWwdetWnTx5Uvl8XvX19QF/gm8WiUS0ceNG1dXVqaamprysnn32WXV3d6tQKKi1tTXg
      Kqe4rqsbN24omUxqfHxcuVxOHR0dam5uVk1NjZ577jlVV1erqqqq3Gfe1dWl8+fPKxwOz7lr
      NgYHB9Xa2lre+5emQmvjxo2qr69XdXV1OeA2btxYPlbW3Nw87X2MD4CbN29qZGREIyMjOnHi
      hDZt2qRSqaSmpia9+eabkqQPP/yw3A1kWZaampo0MTHxULdRkDZu3FhO91wupxdffFGSdOXK
      Fe3evbvcdfXJJ59o+/btkqZW8F/96lf65S9/OSf6/x+4c+eOYrHYtC6H3t5evfnmm1qxYoVK
      pZLeffdd/eAHPyjv4ezZs0e7du0KsOop9+/f18DAQHl9Wr16tTZs2KAPP/xQ0WhUq1atkm3b
      unjxol577TV1dnbKcRz95je/KXcNtba26vr169q2bVvAn2bK8PCwbt26peHhYZ04cUIbNmxQ
      Q0ODbNtWc3PztI2QZVmqr6/X2NiYOjs758yORSgU0j/8wz9ImtpZSiQS5Y1hJBJRc3PzQ7Wu
      Xr1aH3zwgd5+++2K1/tturu79cYbb0yrORQKqaWlRdFoVJLKt4NoaGjQ6Oiourq6HurxMP5C
      sGQyqXQ6XX7c2toqz/NUKpXKG/hsNivbtlUoFFRbW6tCoaBSqaSamholk8k5t5eWTCZVV1cn
      y7Km/dvzPCWTSdXU1KhQKKi6ulr3799XU1NT+YyHL/+Yg5LL5SRJ8Xi8PC2VSqmmpqa8AicS
      CdXX1yuVSqm+vl6JREK1tbXyPK/82YKqfXx8vPy4oaFBVVVVGhoakuM4Wr58uYZMWqUAAACm
      SURBVGzbViqVUnV1dXnPMplMqra2VpOTk6qvr1cymVR1dbUsy1I2m1VtbW0gn0eSJicnlUql
      yo8fbPRTqZRqa2unbYQe/B5SqZRisZjC4bDS6bTq6uqCKP1rFQoFOY5Tbi1++TciTR30ffCd
      j4+Pq6GhQa7rBrpefdXExIQaGhqmffdfXR6e55V/H19eHplMprw+GR8AAGAq4w8CA4CpCAAA
      MNT/ByT6oDiqny2qAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
